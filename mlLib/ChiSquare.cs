namespace mlLib
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;

    /// <summary>
    /// Class implements the ChiSquare value generator.
    /// </summary>
    public static class ChiSquare
    {
        /*  The following functions for calculating normal and
            chi-square probabilities and critical values were adapted by
            John Walker from C implementations
            written by Gary Perlman of Wang Institute, Tyngsboro, MA
            01879.  Both the original C code and this JavaScript edition
            are in the public domain.  */

        #region Constants

        private const double BIGX = 20.0;                  /* max value to represent exp(x) */
        private const double LOG_SQRT_PI = 0.5723649429247000870717135; /* log(sqrt(pi)) */
        private const double I_SQRT_PI = 0.5641895835477562869480795;   /* 1 / sqrt(pi) */

        #endregion

        /// <summary>
        /// probability of normal z value
        /// 
        /// Adapted from a polynomial approximation in:
        ///         Ibbetson D, Algorithm 209
        ///         Collected Algorithms of the CACM 1963 p. 616
        ///         
        /// Note:
        ///         This routine has six digit accuracy, so it is only useful for absolute
        ///         z values less than 6. For z values greater or equal to 6.0, poz() returns 0.0.
        /// </summary>
        /// <param name="z">value to approximate</param>
        /// <returns>probability value</returns>
        public static double ProbabilityOfNormalZValue(double z)
        {
            double y, x, w;
            var Z_MAX = 6.0;              /* Maximum meaningful z value */

            if (z == 0.0)
            {
                x = 0.0;
            }
            else
            {
                y = 0.5 * Math.Abs(z);
                if (y >= (Z_MAX * 0.5))
                {
                    x = 1.0;
                }
                else if (y < 1.0)
                {
                    w = y * y;
                    x = ((((((((0.000124818987 * w
                             - 0.001075204047) * w + 0.005198775019) * w
                             - 0.019198292004) * w + 0.059054035642) * w
                             - 0.151968751364) * w + 0.319152932694) * w
                             - 0.531923007300) * w + 0.797884560593) * y * 2.0;
                }
                else
                {
                    y -= 2.0;
                    x = (((((((((((((-0.000045255659 * y
                                   + 0.000152529290) * y - 0.000019538132) * y
                                   - 0.000676904986) * y + 0.001390604284) * y
                                   - 0.000794620820) * y - 0.002034254874) * y
                                   + 0.006549791214) * y - 0.010557625006) * y
                                   + 0.011630447319) * y - 0.009279453341) * y
                                   + 0.005353579108) * y - 0.002141268741) * y
                                   + 0.000535310849) * y + 0.999936657524;
                }
            }
            return z > 0.0 ? ((x + 1.0) * 0.5) : ((1.0 - x) * 0.5);
        }

        /// <summary>
        /// Compute exponential of a value with a max.
        /// </summary>
        /// <param name="x">value to compute</param>
        /// <returns>new value</returns>
        public static double Ex(double x)
        {
            return (x < -BIGX) ? 0.0 : Math.Exp(x);
        }        

        /// <summary>
        /// Probability of chi-square value
        /// 
        /// Adapted from:
        ///               Hill, I. D. and Pike, M. C.  Algorithm 299
        ///               Collected Algorithms for the CACM 1967 p. 243
        ///       Updated for rounding errors based on remark in
        ///               ACM TOMS June 1985, page 185
        /// </summary>
        /// <param name="x">value to approximate</param>
        /// <param name="df">degress of freedom</param>
        /// <returns>probability value</returns>
        public static double ProbabilityOfChiSquareValue(double x, int df)
        {
            double a, y = 0.0, s;
            double e, c, z;
            bool even;                     /* True if df is an even number */

            if (x <= 0.0 || df < 1)
            {
                return 1.0;
            }

            a = 0.5 * x;
            even = (df & 1) == 0;
            if (df > 1)
            {
                y = Ex(-a);
            }
            s = (even ? y : (2.0 * ProbabilityOfNormalZValue(-Math.Sqrt(x))));
            if (df > 2)
            {
                x = 0.5 * (df - 1.0);
                z = (even ? 1.0 : 0.5);
                if (a > BIGX)
                {
                    e = (even ? 0.0 : LOG_SQRT_PI);
                    c = Math.Log(a);
                    while (z <= x)
                    {
                        e = Math.Log10(z) + e;
                        s += Ex(c * z - a - e);
                        z += 1.0;
                    }
                    return s;
                }
                else
                {
                    e = (even ? 1.0 : (I_SQRT_PI / Math.Sqrt(a)));
                    c = 0.0;
                    while (z <= x)
                    {
                        e = e * (a / z);
                        c = c + e;
                        z += 1.0;
                    }
                    return c * y + s;
                }
            }
            else
            {
                return s;
            }
        }

        /*  CRITCHI  --  Compute critical chi-square value to
                         produce given p.  We just do a bisection
                         search for a value within CHI_EPSILON,
                         relying on the monotonicity of pochisq().  */

        /// <summary>
        /// Compute critical chi-square value to
        /// produce given p.  We just do a bisection
        /// search for a value within CHI_EPSILON,
        /// relying on the monotonicity of pochisq().
        /// </summary>
        /// <param name="p">p-value</param>
        /// <param name="df">degrees of freedom</param>
        /// <returns>critical chi square threshold</returns>
        public static double CriticalChiSquareValue(double p, int df)
        {
            var CHI_EPSILON = 0.000001;   /* Accuracy of critchi approximation */
            var CHI_MAX = 99999.0;        /* Maximum chi-square value */
            var minchisq = 0.0;
            var maxchisq = CHI_MAX;
            double chisqval;

            if (p <= 0.0)
            {
                return maxchisq;
            }
            else if (p >= 1.0)
            {
                return 0.0;
            }

            // check the cache
            Dictionary<int, double> pValueList = null;
            if (ValueCache.TryGetValue(p, out pValueList)
                && pValueList.TryGetValue(df, out chisqval))
            {
                return chisqval;
            }

            // compute value
            chisqval = df / Math.Sqrt(p);    /* fair first value */
            while ((maxchisq - minchisq) > CHI_EPSILON)
            {
                if (ProbabilityOfChiSquareValue(chisqval, df) < p)
                {
                    maxchisq = chisqval;
                }
                else
                {
                    minchisq = chisqval;
                }
                chisqval = (maxchisq + minchisq) * 0.5;
            }

            // add the value to the cache
            if (!ValueCache.ContainsKey(p))
            {
                ValueCache.Add(p, new Dictionary<int, double>());
            }
            ValueCache[p].Add(df, chisqval);

            // return value
            return chisqval;
        }

        /// <summary>
        /// Critical Chi-Square values for the given probability at 1-300 degrees of freedom (0 indexed, so index 0 = 1 degree of freedom)
        /// </summary>
        private static Dictionary<double, Dictionary<int, double>> ValueCache = new Dictionary<double, Dictionary<int, double>>();
        /*
        public static Dictionary<double, double[]> Values = new Dictionary<double, double[]>() { 
            { 0.05,
            new [] { 3.84145881598619, 5.99146467455617, 7.81472825705153, 9.48772899311701, 11.0704974777996, 12.5915868932915, 14.0671407841339, 15.5073128234233, 16.9189773622533, 18.3070377398833, 19.6751374326982, 21.0260701235639, 22.3620320675783, 23.6847911577986, 24.9957902172708, 26.2962273668918, 27.5871116198456, 47.7685142912193, 50.1862513731238, 54.5921407687078, 57.116664715492, 61.6091224609082, 64.2280852436187, 68.7965509284165, 71.4999799348878, 76.1361868647415, 78.9158991671518, 83.6132146609959, 86.4623958842682, 91.2153884140545, 94.1282915479622, 98.9324318331866, 101.90415173086, 106.755605196554, 109.781912515883, 114.677392259742, 117.754606105971, 122.691260434992, 125.816149333653, 130.791480946455, 133.961188723003, 138.972993217745, 142.184977138966, 147.231290717595, 150.483273827328, 155.562339359151, 158.852271677139, 163.962503296309, 167.288529314531, 172.428491611704, 175.788926187345, 180.957311668694, 184.350614884201, 189.546227361389, 192.970989313886, 198.192730892604, 201.647655483706, 206.89451531817, 210.3784051267, 215.649446891327, 219.161197063259, 224.455553309089, 227.994135801349, 233.310999646871, 236.875459249761, 242.214079387073, 245.803525265151, 251.163197250945, 254.776796712188, 260.156862201389, 263.793834941157, 269.193675897571, 272.853289625358, 278.27232338198, 281.953890472753, 287.391568698851, 291.094440228766, 296.550245164713, 300.2738090452, 305.747251203398, 309.490928399333, 314.981544015232, 318.744788011821, 324.252137144677, 328.034427974844, 333.55809215033, 337.358937852467, 342.898520570801, 346.717452448995, 352.27257509491, 356.109147860557, 361.679448528772, 365.533238351352, 371.11837377913, 374.988973937949, 380.588614340498, 384.475640181037, 390.089470592637, 393.992552054543, 399.620271637161, 403.539055145154, 409.180374131327, 413.114520529362, 418.769162987763, 422.718348896818, 428.386048758842, 432.34996102081, 438.030462022266, 442.008804372283, 447.70186079476, 451.694344689875, 457.399719952978, 461.406069586814, 467.123536298138, 471.143485593759, 476.872824191103, 480.906117450758, 486.647116202122, 490.693506907722, 496.445961361528, 500.505212176728, 506.268925488773, 510.340806528417, 516.115587606366, 520.199877708889, 525.98554270126, 530.082027706469, 535.878398205437, 539.986871525108, 545.793775078799, 549.914036455512, 555.731305743333, 559.863161596162, 565.690636023999, 569.833898748797, 575.671420742161, 579.825909098902, 585.673326056314, 589.838864477703, 595.696029337137, 599.872446624967, 605.739216285313, 609.926347197327, 615.802582197685, 620.000266164757, 625.885831100941, 630.093913318308, 635.988676834509, 640.207004492443, 646.110839385361, 650.339265813346, 656.252048036751, 660.490429525587, 666.412037861284, 670.660236074621, 676.590553211189, 680.848432565744, 686.787343711584, 691.054772547506, 697.002166051432, 701.279015895094, 707.234782650735, 711.520929472568, 717.48496374304, 721.780285196133, 727.752484176712, 732.056861525213, 738.03712356488, 742.350442337896, 748.338669367534, 752.660815806388, 758.656912393325, 762.987776154641, 768.991647849145, 773.331123429279, 779.342678738769, 783.690660371681, 789.709809923562, 794.066195104408, 800.092852329131, 804.457541805933, 810.491620679564, 814.86451691216, 820.905934197151, 825.286941282223, 831.33561507799, 835.724640227642, 841.780491427251, 846.177444318554, 852.240393897697, 856.645184240128, 862.715156634902, 867.127698648801, 873.204618304701, 877.624825518904, 883.708619793308, 888.136410093561, 894.227007090927, 898.662298391413, 904.759627684065, 909.202340090486, 915.306333438949, 919.756388526567, 925.86697771577, 930.324299970656, 936.441419693342, 940.905932185958, 947.029517158301, 951.501148031175, 957.631135154813, 962.10981185461, 968.246138774422, 972.731790214178, 978.874396038549, 983.366953317613, 989.515777176632, 994.015172859257, 1000.17015750713, 1004.6763241808, 1010.83741023093, 1015.35028338806, 1021.51741579711, 1026.036930232, 1032.21005253574, 1036.73614666652, 1042.91520458144, 1047.44781540717, 1053.63275538932, 1058.17182353139, 1064.36259277593, 1068.90805743616, 1075.10460459717, 1079.65640859832, 1085.85868234809, 1090.41676709283, 1096.62471828168, 1101.1890280723, 1107.40260756803, 1111.97308672609, 1118.19224541394, 1122.76884043945, 1128.99353138121, 1133.57618807294, 1139.80636434712, 1144.39502996177, 1150.63064682228, 1155.22527007375, 1161.46628135139, 1166.06681097135, 1172.31317339108, 1176.91955956762, 1183.17122843102, 1187.78342280817, 1194.04035559059, 1198.65830910973, 1204.92046330164, 1209.54412907873, 1215.81146362401, 1220.44079407199, 1226.71326792915, 1231.34821691551, 1237.62578977665, 1242.26631334185, 1248.54894563229, 1253.19499767508, 1259.48265055317, 1264.13418786368, 1270.4268225015, 1275.08380260363, 1281.38138090576, 1286.04375990048, 1292.34624522251, 1297.01398281939, 1303.32133781116, 1307.99439157774, 1314.30658033955, 1318.98491001365, 1325.30189737702, 1329.98546271031, 1336.30721280076, 1340.99597499563, 1347.32245410654, 1352.01637366032, 1358.34754666035, 1363.04658552061, 1369.38241872734, 1374.08653957298, 1380.4270007523, 1385.13616627501, 1391.48122176793, 1396.19539539036, 1402.54501370401, 1407.26415886133, 1413.61830779598, 1418.34238937192, 1424.70103817505, 1429.43002034745, 1435.79313755956, 1440.52698667213, 1446.8945415626 }},
            { 0.01,
            new [] { 6.63489669561386, 9.21034008264542, 11.3448666036129, 13.2767042517662, 15.0862719863653, 16.8118934333324, 18.4753068163991, 20.0902351737022, 21.6659942641854, 23.2092510908842, 24.7249702736735, 26.2169672548771, 27.6882492378354, 29.1412379965186, 30.5779139511287, 31.9999268651009, 48.214126098901, 52.4687521532178, 54.9177290312946, 59.2764485627413, 61.825216691941, 66.274422518909, 68.912615571171, 73.4416048228741, 76.1605813167989, 80.7607817277312, 83.5532776918262, 88.2177085056901, 91.077558202669, 95.8004429005086, 98.7223666440696, 103.498859703541, 106.478296676651, 111.304282639176, 114.337259391323, 119.209204204381, 122.292235055938, 127.207070831209, 130.337075768039, 135.292119905353, 138.466360876337, 143.459245171398, 146.675272593275, 151.703893728554, 154.959505749866, 160.02198247239, 163.315189415589, 168.409830182791, 171.738827293739, 176.864102948457, 180.227244151756, 185.381764136255, 188.777544265613, 193.960040034726, 197.387078334577, 202.596388198435, 206.0534112202, 211.288465997204, 214.774298337288, 220.034112688154, 223.547664792277, 228.831325387582, 232.371585150249, 237.678245007992, 241.244270117022, 246.573139959946, 250.164051051252, 255.51439454779, 259.129367941059, 264.500497886911, 268.138762167655, 273.530032150447, 277.190862759016, 282.601666385308, 286.284382338636, 291.714148763567, 295.418106275611, 300.866298666224, 304.590890868567, 310.057000443339, 313.801653762348, 319.285199614242, 323.049371005036, 328.549896944314, 332.333071366884, 337.850146153942, 341.651833620854, 347.185046635568, 351.004782072268, 356.553741870448, 360.391082358547, 365.955418329686, 369.809941719286, 375.389297725633, 379.260601871647, 384.854639321566, 388.742339448072, 394.35073456727, 398.254463053308, 403.876905795187, 407.79631099198, 413.432505698875, 417.367250625975, 423.0169127509, 426.966673624702, 432.629529805854, 436.593997417949, 442.269785525277, 446.2486627209, 451.937131234445, 455.930131680798, 461.631039045751, 465.637886940967, 471.350999786519, 475.371431151871, 481.096524717286, 485.130284477491, 490.867143222131, 494.913985899184, 500.662400107831, 504.722088316921, 510.481857559644, 514.554162702989, 520.325092459098, 524.409793724772, 530.191696104594, 534.288579986896, 540.081273019314, 544.190133407246, 549.993441742845, 554.114079426508, 559.927832884714, 564.06005440047, 569.88408785779, 574.027705506887, 579.861860256642, 584.016694703605, 589.86081500072, 594.026689652819, 599.880625633523, 604.05737175839, 609.920977517031, 614.108428449836, 619.981563426554, 624.179559142794, 630.06208572071, 634.270470917691, 640.162255400792, 644.380879525561, 650.281792622991, 654.510507804807, 660.420423131436, 664.659086947795, 670.577881694771, 674.826355825644, 680.753911575302, 685.012060368899, 690.948259639554, 695.215952263679, 701.160682365298, 705.437790646683, 711.390941846184, 715.677340228576, 721.638804627582, 725.934372434858, 731.904045953415, 736.208665159065, 742.186444234103, 746.499998637009, 752.485785470344, 756.808163041715, 762.801859257743, 767.132950581145, 773.134461049922, 777.474158501718, 783.483392186463, 787.831590722781, 793.84845583234, 798.205053803977, 804.229462752119, 808.594361117575, 814.626226513647, 818.99932713015, 825.038565266877, 829.419774271082, 835.466301958077, 839.85552462982, 845.909261973575, 850.306408752222, 856.367276865058, 860.77225815272, 866.840179413557, 871.25290816417, 877.32780654449, 881.748198287096, 887.830000640824, 892.257971677464, 898.346605435945, 902.782074634451, 908.877468202263, 913.320355152246, 919.42244022619, 923.872667087708, 929.981375439093, 934.438865061384, 940.554128992371, 945.018807754386, 951.140562556684, 955.612356562633, 961.740538221784, 966.219375177752, 972.353920945898, 976.839730159845, 982.980577186681, 987.473290314665, 993.620379762724, 998.119928330416, 1004.27320006536, 1008.77951742732, 1014.93891368154, 1019.45193452877, 1025.61739808181, 1030.13705869555, 1036.30853358656, 1040.83477132372, 1047.01220203424, 1051.54495478491, 1057.72828751709, 1062.26749474299, 1068.45667663729, 1073.00227938336, 1079.19725825079, 1083.7491975294, 1089.9499221216, 1094.50814105221, 1100.714560817, 1105.27900300571, 1111.49106894387, 1116.06167901657, 1122.27934235707, 1126.85606539133, 1133.07927846676, 1137.66206166591, 1143.89077770989, 1148.47956816084, 1154.71374052344, 1159.30848745047, 1165.5480711069, 1170.14872243744, 1176.39367264928, 1181.00017901859, 1187.25045172032, 1191.86276476714, 1198.11831697123, 1202.73638755898, 1208.99717599154, 1213.62095713499, 1219.88694103668, 1224.51638554106, 1230.78752292786, 1235.42258516536, 1241.6988362628, 1246.33947036578, 1252.62079504319, 1257.26695733028, 1263.55331553845, 1268.20496145054, 1274.4963155454, 1279.15340272593, 1285.44971361989, 1290.11219879962, 1296.4134295471, 1301.08127167099, 1307.38738547778, 1312.06054255017, 1318.37150262203, 1323.04993422818, 1329.3657049234, 1334.04937161016, 1340.36991703324, 1345.05877900519, 1351.38406482758, 1356.07808323461, 1362.40807529073, 1367.10721223499, 1373.44187639887, 1378.14609360532, 1384.48539633304, 1389.19465713552, 1395.53856604034, 1400.25283405907, 1406.60131646786, 1411.32055491325, 1417.67357842298, 1422.39775212365, 1428.7552858796, 1433.48435993423, 1439.84637248563, 1444.58031224902, 1450.94677282032 } },
            { 0.001,
            new []{ 10.8275680101699, 13.8155106068975, 16.266236819245, 18.4668271581131, 20.5150048315473, 22.457744134771, 24.3218868322025, 26.1244816398377, 27.8771645616839, 29.5882983580708, 31.2641341816687, 32.9094904526216, 34.5281790146, 45.8978043593134, 48.1827997196749, 52.2861455278104, 54.6818818088841, 58.9022141536129, 61.3979876966049, 65.7206864654905, 68.3071198640221, 72.720260609907, 75.3892225002007, 79.8830314945222, 82.627490213354, 87.1938809167653, 90.0077445530527, 94.6399602863702, 97.5179311343021, 102.210271243054, 105.147720370258, 109.895329443837, 112.888190373246, 117.686895248319, 120.731577541561, 125.577760773183, 128.671076955271, 133.561578914382, 136.700683635301, 141.632725295549, 144.815067656439, 149.786186236373, 153.009468837904, 158.017470752991, 161.27961464867, 166.322535045611, 169.621651498264, 174.697719002145, 178.032086217625, 183.139699665617, 186.50774092543, 191.645443170123, 195.045713283969, 200.212174965866, 203.643341084303, 208.837344212887, 212.298174827386, 217.518595684808, 221.00795083529, 226.253767118239, 229.770588924578, 235.040840117955, 238.584142280696, 243.877941423285, 247.44680408444, 252.763327475789, 256.356892580307, 261.695370562557, 265.31283123019, 270.672546483602, 274.313147432264, 279.693426371842, 283.356455549842, 288.756667261416, 292.44145529157, 297.861005498021, 301.566920575268, 307.005249066927, 310.731693836516, 316.188273690716, 319.934682391465, 325.409013758373, 329.174851051988, 334.666461382855, 338.451218407496, 343.959659833515, 347.762854189072, 353.287701327278, 357.108873232013, 362.649721285696, 366.488432788427, 372.044897922631, 375.900730966331, 381.472446221523, 385.345002901019, 390.931618097378, 394.820517103134, 400.421698126364, 404.326576356932, 409.94200369307, 413.862511888973, 419.491880410876, 423.427684185394, 429.070700516868, 433.021479789109, 438.677863873178, 442.643310548808, 448.312792341837, 452.292612418829, 457.974932803508, 461.968841255027, 467.663751812123, 471.671476842202, 477.378738378007, 481.400015862664, 487.1193979746, 491.153974760351, 496.885254879804, 500.932887090234, 506.675853280404, 510.736304431301, 516.490748849078, 520.563793124853, 526.329516136595, 530.414933685493, 536.191743948015, 540.289321323871, 546.077033281112, 550.186565784711, 555.984999093437, 560.106288467971, 565.915268535259, 570.04812337864, 575.867483128933, 580.01171635365, 585.841292039357, 589.996724124962, 595.836357327282, 600.002813704781, 605.852351574835, 610.029661859114, 615.888955945426, 620.07695677544, 625.945862705498, 630.14439385673, 636.022771359077, 640.231678037041, 646.119391644412, 650.338523663704, 656.235440809761, 660.464651132554, 666.370643554485, 670.609790668696, 676.524733192363, 680.773678516286, 686.697450120145, 690.956058687182, 696.888540823571, 701.156682003788, 707.09775982851, 711.375305734595, 717.32486650552, 721.611693273905, 727.56962833891, 731.865614473152, 737.831817171738, 742.136844831002, 748.111211414639, 752.425165305599, 758.407594094689, 762.730363430025, 768.720755881504, 773.052229465262, 779.050489410551, 783.390561351641, 789.396594915659, 793.745160283828, 799.758875163443, 804.115833269384, 810.137140018209, 814.502390577566, 820.53120131012, 824.90464709776, 830.940876877342, 835.322423149381, 841.365987385339, 845.755541938039, 851.806359198343, 856.203831053867, 862.261821176561, 866.667121289793, 872.732206244437, 877.145248257665, 883.217350948888, 887.638049829698, 893.717095739093, 898.145367798769, 904.231283832622, 908.667048938658, 914.759762246225, 919.202940232984, 925.302381427695, 929.752893554233, 935.858993385729, 940.316764614565, 946.429455798342, 950.894410348355, 957.013625666175, 961.485690778657, 967.611366527994, 972.090470239411, 978.222542850269, 982.708613981223, 988.847020410043, 993.339990932391, 999.484670697852, 1003.98447264235, 1010.13536515269, 1014.64193137474, 1020.79897880659, 1025.31224462072, 1031.4753876119, 1035.9952900261, 1042.16447305777, 1046.69094833639, 1052.86611540379, 1057.3991015046, 1063.58019831112, 1068.11963576886, 1074.30660781173, 1078.85243725316, 1085.04523294159, 1089.59739592488, 1095.79596297227, 1100.35440112185, 1106.55868885408, 1111.12334732849, 1117.33330562363, 1121.90412882305, 1128.1197087593, 1132.69664293196, 1138.91779570531, 1143.50078630428, 1149.7274656877, 1154.31646093074, 1160.5486195302, 1165.14356774184, 1171.3811594702, 1175.98200997998, 1182.22498989501, 1186.83169305222, 1193.08001719461, 1197.69252345161, 1203.94614867931, 1208.5644095119, 1214.82329239572, 1219.44726126026, 1225.71135884223, 1230.34098931657, 1236.61025990143, 1241.24550567018, 1247.51990965737, 1252.16072546907, 1258.44022234137, 1263.08656304393, 1269.37111214792, 1274.02293463612, 1280.31249798367, 1284.96975927745, 1291.26429849758, 1295.92695572364, 1302.22643264785, 1306.89444402901, 1313.19882105849, 1317.87214542686, 1324.18138134585, 1328.85997864069, 1335.17404678498, 1339.85787658294, 1346.17673657336, 1350.86576007643, 1357.18937696937, 1361.88355497642, 1368.21189356135, 1372.91118801063, 1379.24421478705, 1383.9485882537, 1390.28626924617, 1394.99568388012, 1401.33798610538, 1406.0524062838, 1412.39929713772, 1417.11868628431, 1423.47013343891, 1428.19445615171, 1434.55042745936, 1439.2796484395, 1445.64011347916, 1450.37419862607, 1456.739125344 } }
        };
         */
    }
}
